Assigment No 3
Imagine a publishing company which does marketing for book and audio cassette versions.  Create  a  class  publication  that  stores  the  title  (a  string)  and  price  (type float) of publications. From this class derive two classes: book which adds a page count (type int) and tape which adds a playing time in minutes (type float). Write a program  that  instantiates  the  book  and  tape  class,  allows  user  to  enter  data  and displays the data members. If an exception is caught, replace all the data member values with zero values.

#include<iostream>
#include<string>
using namespace std;
//base class publication
class publication
{
private:
string title;
float prices;
public:
publication()
 {
title="";
prices=0.0;
}
void get_data()
{
cout<<"\nEnter Title :";
cin.ignore();//clear input buffer
getline(cin,title);
cout<<"\nEnter Price : ";
cin>>prices;
}
void put_data()
{
cout<<"\n ________________________________ \n";
cout<<"\n Information : " <<endl;
cout<<"\n Title :"<<title;
cout<<"\n Price :"<<prices;
}
};
class book: public publication
{
private:
int pages;
public:
book(){
pages=0;
}
void get_data()
{
publication::get_data();
cout<<endl;
cout<<"Enter Page Count : \n";
cin>>pages;
}
void put_data()
{

try{
if(pages==0)
 throw pages;}
 catch(int f)
 {
 cout<<"\n error: pages not valid :"<<f;
 pages=0;
 }
 
cout<<"\n Pages Are :"<<pages;
publication::put_data();
}
};
class tape: public publication
{
private:
float playtime;
public:
tape()
{
playtime=0.0;
}
void get_data()
{
publication::get_data();
cout<<"Enter Play Time Of Cassette \n";
cin>>playtime;
}
void put_data()
{

try
{
if(playtime==0.0)
throw playtime;
}
catch(float r)
{
cout<<"\n Error: Invalid Playtime : "<<playtime;
playtime=0.0;
}
cout<<"\n Playtime is : "<<playtime;
publication::put_data();
}
};
int main()//main program
{
book b[10];// arrray of objects
tape t[10];
int choice=0,bookCount=0,tapeCount=0;
cout<<"-----------------------";
do
{
cout<<"\n 1. Add book ";
cout<<"\n 2. Add tape: ";
cout<<"\n 3. Display book ";
cout<<"\n 4. Display tape";
cout<<"\n 5. Exit:"<<endl;
cout<<"\n Enter Choice : ";
cin>>choice;
switch(choice)
{
case 1:
 {
 cout<<"\n--------------\n";
 cout<<"Add Book: \n";
 b[bookCount].get_data();
 bookCount++;
 break;
 }
case 2:
 {
 cout<<"\n--------------\n";
 cout<<"Add Tape: \n";
 t[tapeCount].get_data();
 tapeCount++;
 break;
 }
case 3:
 {
 cout<<"\n (books)";
 for(int j=0;j<bookCount;j++)
 {
 b[j].put_data();
 }
 break;
 }
case 4:
 {
 cout<<"\n (tape)";
 for(int j=0;j<tapeCount;j++)
 {
 t[j].put_data();
 }
 break;
 }
case 5:
 {
 cout<<"**********Program Exited Successfully**********"<<endl;
exit(0);

 }
 default:
 {
 cout<<"\n Invalid";
 }
}
}
while(choice!=5);
return 0;
}




Output:
-----------------------
 1. Add book 
 2. Add tape: 
 3. Display book 
 4. Display tape
 5. Exit:

 Enter Choice : 1
 --------------
Add Book: 

Enter Title :OOP
Enter Price : 200
Enter Page Count : 
100
1. Add book 
 2. Add tape: 
 3. Display book 
 4. Display tape
 5. Exit:

 Enter Choice : 2
 --------------
Add Tape: 

Enter Title :C++
Enter Price : 300
Enter Play Time Of Cassette 
30
1. Add book 
 2. Add tape: 
 3. Display book 
 4. Display tape
 5. Exit:

 Enter Choice : 3
 (books)
 ________________________________ 

 Information : 

 Title :OOP
 Price :200
 Pages Are :100
 1. Add book 
 2. Add tape: 
 3. Display book 
 4. Display tape
 5. Exit:

 Enter Choice : 4
-----------------------
 1. Add book 
 2. Add tape: 
 3. Display book 
 4. Display tape
 5. Exit:

 Enter Choice : 2
 --------------
Add Tape: 

Enter Title :ee
Enter Price : 67
Enter Play Time Of Cassette 
0.0
1. Add book 
 2. Add tape: 
 3. Display book 
 4. Display tape
 5. Exit:

 Enter Choice : 4
 (tape)
 Error: Invalid Playtime : 0
 Playtime is : 0
 ________________________________ 

 Information : 

 Title :ee
 Price :67
 1. Add book 
 2. Add tape: 
 3. Display book 
 4. Display tape
 5. Exit:

 Enter Choice :


